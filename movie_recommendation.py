# -*- coding: utf-8 -*-
"""movie recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IAW0NNP3AIwnPq-3WGPLqTc5sPsxr6Ia
"""

import pandas as pd

from google.colab import files

files.upload()

# Upload kaggle token disini

!mkdir ~/.kaggle

!cp kaggle.json ~/.kaggle/

!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d rounakbanik/the-movies-dataset

!mkdir ~/movies

!unzip the-movies-dataset.zip -d ~/movies

!ls ~/movies

df = pd.read_csv('~/movies/movies_metadata.csv')

print(df.shape)

df.head().T

df['adult'].value_counts() # wtf ??

df2 = df[['title', 'overview']]
df2.drop_duplicates(inplace=True)
df2

df2[df2.duplicated(subset=['title', 'overview'], keep=False)]

df2 = df2[:20000]

df2.isna().sum()

df2.dropna(inplace=True)

df2.isna().sum()

df2.shape

df2.info()

from sklearn.feature_extraction.text import TfidfVectorizer
 
tf = TfidfVectorizer()
 
tf.fit(df2['overview']) 

tfidf_matrix = tf.fit_transform(df2['overview'])

tfidf_matrix.shape

from sklearn.metrics.pairwise import cosine_similarity

cosine_sim = cosine_similarity(tfidf_matrix) 
cosine_sim

cosine_sim_df = pd.DataFrame(cosine_sim, index=df2['title'], columns=df2['title'])
print('Shape:', cosine_sim_df.shape)
 
cosine_sim_df.sample(5, axis=1).sample(10, axis=0)

def movie_recommendations(title, similarity_data=cosine_sim_df, items=df2, k=15):
    index = similarity_data.loc[:,title].to_numpy().argpartition(
        range(-1, -k, -1))
    
    closest = similarity_data.columns[index[-1:-(k+2):-1]]
    
    closest = closest.drop(title, errors='ignore')
 
    return pd.DataFrame(closest).merge(items).head(k)

movie_recommendations('Toy Story')